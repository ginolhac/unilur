[
  {
    "objectID": "practicals/practical03.html",
    "href": "practicals/practical03.html",
    "title": "Practical collapse",
    "section": "",
    "text": "Note\n\n\n\nThis practical has:\n\nshow-solution: true, solution are displayed.\ncollapse-solution: false, solution are not collapsed (collapsed is the usual default mode)\n\n\n\n\nGenerate 5 numbers from the uniform distribution between 0 and 1\n\n\n\n\n\n\nSolution 1 \n\n\n\n\n\n\nrunif(n = 5)\n\n[1] 0.9829412 0.1028893 0.0241326 0.5241282 0.9408090\n\n\n\n\n\nThe next solution collapsed despite the global option because of its specific option: #| unilur-collapse: true\n\n\nGenerate 5 numbers from the uniform distribution between 5 and 10\n\n\n\n\n\n\nSolution 2 \n\n\n\n\n\n\n runif(n = 5, min = 5, max = 10)\n\n[1] 5.791797 9.368037 6.141487 8.211036 5.391873\n\n\n\n\n\n\n\nGenerate 5 numbers from the strandard distribution\n\n\n\n\n\n\nSolution 3 \n\n\n\n\n\n\n rnorm(n = 5)\n\n[1] -0.16776314 -1.41286238  0.03879815 -0.54060095 -1.75719883\n\n\n\n\n\nNext block is also collapsed individually\n\n\nResults are always changing, how to get identical random numbers?\n\n\n\n\n\n\nSolution 4 \n\n\n\n\n\n\nUse the set.seed(xx) where xx is a fixed number."
  },
  {
    "objectID": "practicals/practical01.html",
    "href": "practicals/practical01.html",
    "title": "Practical chickens",
    "section": "",
    "text": "Warning\n\n\n\nThis practical has show-solution: false, solution are hidden.\n\n\nLooking at this built-in dataset (regular chunk are visible):\n\nhead(chickwts)\n\n  weight      feed\n1    179 horsebean\n2    160 horsebean\n3    136 horsebean\n4    227 horsebean\n5    217 horsebean\n6    168 horsebean\n\n\n\nHow many observations have we?\n\n\nDe we need to load a package for this dataset?"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Demo website",
    "section": "",
    "text": "This Quarto website is demo of how we can use unilur for teaching.\nYou can check the source to adapt to your own needs in the docs folder.1\nOne real example is this bachelor R intro module for Life Sciences students.\nFor students, we want to have slides (revealjs) and practicals. In the later, the Quarto documents are using unilur for writing solutions along questions. Solutions are within green boxes that we hide for instructions and reveal when practicals are done. This is acheived by toggling the header variable to true from: show-solution: false"
  },
  {
    "objectID": "index.html#acknowledgements",
    "href": "index.html#acknowledgements",
    "title": "Demo website",
    "section": "Acknowledgements",
    "text": "Acknowledgements\n\nAndrew Heiss with this great example from his dataviz website"
  },
  {
    "objectID": "index.html#footnotes",
    "href": "index.html#footnotes",
    "title": "Demo website",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nThe unilur extension lies at the root of the GitHub repo, but a symbolic link is used for the demo website in the sub-folder docs/ and pointed to the repo root _extensions/.↩︎"
  },
  {
    "objectID": "example-solution.html",
    "href": "example-solution.html",
    "title": "Unilur Example",
    "section": "",
    "text": "Activate the extension by adding the following lines to your YAML header:\n\nformat:\n  unilur-html: default\n  unilur-html+solution:\n    # You have to specify a different output file otherwise they will \n    # overwrite themselves\n    output-file: example-solution.html \nWhen you call quarto render, two HTML files will be produced. The one named example-solution.html will have the solution blocks included.\n\nSolution code blocks are highlighted or discarded according to the chunk option unilur-solution Boolean and the global option show-solution in the YAML header.\n\nOf note, if show-solution is absent, it is considered false.\n\n\n\nCode chunk with echo: fenced\n\n\n\n\n\n\n\nSolution 1 \n\n\n\n\n\n\n```{r}\n#| unilur-solution: true\n\n1 + 1\n```\n\n[1] 2\n\n\n\n\n\n\nCode block without solution, so stays in whatever happens\n\n\n```{r}\n1 + 1\n```\n\n[1] 2\n\n\n\nSolution with unilur-collapse: false\n\n\n\n\n\n\n\nSolution 2 \n\n\n\n\n\n\n1 + 2\n\n[1] 3\n\n\n\n\n\nAny machinery supported by Quarto can be used:\n\nPython Code chunk with unilur-solution: true\n\n#| unilur-solution: true\nfor i in [3, 5, 6]:\n  print(i)\nCaution callouts are classic:\n\n\n\n\n\n\nDanger\n\n\n\nRed expected\n\n\nBut tip ones are using a yellow color to better discriminate with the new solution blocks:\n\n\n\n\n\n\nTip\n\n\n\nAre yellow instead of green-ish\n\n\n\nSolution with markdown text ({block}):\n\n\n\n\n\n\n\nSolution 3 \n\n\n\n\n\n\nFor text with bold or warning people about CO2 atmospheric concentration\nR code can be displayed but not executed.\n```{r}\n\n1 + 1\n```\n\n\n\n\nYou can also include div labels with unilur-solution. Note the solution will only show up in the solution file (collapsed box).\n\n\n\n\n\n\nSolution 4 \n\n\n\n\n\n\nHere is a solution that is inside a div. The contents of this will only be shown in the solution document. Source code highlighting is preserved inside the div and executable.\n\nsample(CO2,  size = 5) |&gt; \n  head(5)\n\n    Type Plant  Treatment uptake conc\n1 Quebec   Qn1 nonchilled   16.0   95\n2 Quebec   Qn1 nonchilled   30.4  175\n3 Quebec   Qn1 nonchilled   34.8  250\n4 Quebec   Qn1 nonchilled   37.2  350\n5 Quebec   Qn1 nonchilled   35.3  500\n\n\n\n\n\n\nThe advantage of working inside the div labels is that standard code formatting and highlighting will apply, and code can be executed alongside standard text."
  },
  {
    "objectID": "example-solution.html#usage-once-extension-is-installed",
    "href": "example-solution.html#usage-once-extension-is-installed",
    "title": "Unilur Example",
    "section": "",
    "text": "Activate the extension by adding the following lines to your YAML header:\n\nformat:\n  unilur-html: default\n  unilur-html+solution:\n    # You have to specify a different output file otherwise they will \n    # overwrite themselves\n    output-file: example-solution.html \nWhen you call quarto render, two HTML files will be produced. The one named example-solution.html will have the solution blocks included.\n\nSolution code blocks are highlighted or discarded according to the chunk option unilur-solution Boolean and the global option show-solution in the YAML header.\n\nOf note, if show-solution is absent, it is considered false.\n\n\n\nCode chunk with echo: fenced\n\n\n\n\n\n\n\nSolution 1 \n\n\n\n\n\n\n```{r}\n#| unilur-solution: true\n\n1 + 1\n```\n\n[1] 2\n\n\n\n\n\n\nCode block without solution, so stays in whatever happens\n\n\n```{r}\n1 + 1\n```\n\n[1] 2\n\n\n\nSolution with unilur-collapse: false\n\n\n\n\n\n\n\nSolution 2 \n\n\n\n\n\n\n1 + 2\n\n[1] 3\n\n\n\n\n\nAny machinery supported by Quarto can be used:\n\nPython Code chunk with unilur-solution: true\n\n#| unilur-solution: true\nfor i in [3, 5, 6]:\n  print(i)\nCaution callouts are classic:\n\n\n\n\n\n\nDanger\n\n\n\nRed expected\n\n\nBut tip ones are using a yellow color to better discriminate with the new solution blocks:\n\n\n\n\n\n\nTip\n\n\n\nAre yellow instead of green-ish\n\n\n\nSolution with markdown text ({block}):\n\n\n\n\n\n\n\nSolution 3 \n\n\n\n\n\n\nFor text with bold or warning people about CO2 atmospheric concentration\nR code can be displayed but not executed.\n```{r}\n\n1 + 1\n```\n\n\n\n\nYou can also include div labels with unilur-solution. Note the solution will only show up in the solution file (collapsed box).\n\n\n\n\n\n\nSolution 4 \n\n\n\n\n\n\nHere is a solution that is inside a div. The contents of this will only be shown in the solution document. Source code highlighting is preserved inside the div and executable.\n\nsample(CO2,  size = 5) |&gt; \n  head(5)\n\n    Type Plant  Treatment uptake conc\n1 Quebec   Qn1 nonchilled   16.0   95\n2 Quebec   Qn1 nonchilled   30.4  175\n3 Quebec   Qn1 nonchilled   34.8  250\n4 Quebec   Qn1 nonchilled   37.2  350\n5 Quebec   Qn1 nonchilled   35.3  500\n\n\n\n\n\n\nThe advantage of working inside the div labels is that standard code formatting and highlighting will apply, and code can be executed alongside standard text."
  },
  {
    "objectID": "example.html",
    "href": "example.html",
    "title": "Unilur Example",
    "section": "",
    "text": "Activate the extension by adding the following lines to your YAML header:\n\nformat:\n  unilur-html: default\n  unilur-html+solution:\n    # You have to specify a different output file otherwise they will \n    # overwrite themselves\n    output-file: example-solution.html \nWhen you call quarto render, two HTML files will be produced. The one named example-solution.html will have the solution blocks included.\n\nSolution code blocks are highlighted or discarded according to the chunk option unilur-solution Boolean and the global option show-solution in the YAML header.\n\nOf note, if show-solution is absent, it is considered false.\n\n\n\nCode chunk with echo: fenced\n\n\nCode block without solution, so stays in whatever happens\n\n\n```{r}\n1 + 1\n```\n\n[1] 2\n\n\n\nSolution with unilur-collapse: false\n\nAny machinery supported by Quarto can be used:\n\nPython Code chunk with unilur-solution: true\n\n#| unilur-solution: true\nfor i in [3, 5, 6]:\n  print(i)\nCaution callouts are classic:\n\n\n\n\n\n\nDanger\n\n\n\nRed expected\n\n\nBut tip ones are using a yellow color to better discriminate with the new solution blocks:\n\n\n\n\n\n\nTip\n\n\n\nAre yellow instead of green-ish\n\n\n\nSolution with markdown text ({block}):\n\nYou can also include div labels with unilur-solution. Note the solution will only show up in the solution file (collapsed box).\nThe advantage of working inside the div labels is that standard code formatting and highlighting will apply, and code can be executed alongside standard text."
  },
  {
    "objectID": "example.html#usage-once-extension-is-installed",
    "href": "example.html#usage-once-extension-is-installed",
    "title": "Unilur Example",
    "section": "",
    "text": "Activate the extension by adding the following lines to your YAML header:\n\nformat:\n  unilur-html: default\n  unilur-html+solution:\n    # You have to specify a different output file otherwise they will \n    # overwrite themselves\n    output-file: example-solution.html \nWhen you call quarto render, two HTML files will be produced. The one named example-solution.html will have the solution blocks included.\n\nSolution code blocks are highlighted or discarded according to the chunk option unilur-solution Boolean and the global option show-solution in the YAML header.\n\nOf note, if show-solution is absent, it is considered false.\n\n\n\nCode chunk with echo: fenced\n\n\nCode block without solution, so stays in whatever happens\n\n\n```{r}\n1 + 1\n```\n\n[1] 2\n\n\n\nSolution with unilur-collapse: false\n\nAny machinery supported by Quarto can be used:\n\nPython Code chunk with unilur-solution: true\n\n#| unilur-solution: true\nfor i in [3, 5, 6]:\n  print(i)\nCaution callouts are classic:\n\n\n\n\n\n\nDanger\n\n\n\nRed expected\n\n\nBut tip ones are using a yellow color to better discriminate with the new solution blocks:\n\n\n\n\n\n\nTip\n\n\n\nAre yellow instead of green-ish\n\n\n\nSolution with markdown text ({block}):\n\nYou can also include div labels with unilur-solution. Note the solution will only show up in the solution file (collapsed box).\nThe advantage of working inside the div labels is that standard code formatting and highlighting will apply, and code can be executed alongside standard text."
  },
  {
    "objectID": "practicals.html",
    "href": "practicals.html",
    "title": "Practicals",
    "section": "",
    "text": "Date\n\n\n\nTitle\n\n\n\nSubtitle\n\n\n\n \n\n\n\n\n\n\n\n\nFriday, 22 Aug. 2025\n\n\nPractical chickens\n\n\none question only\n\n\n\n\n\n\n\n\n\nMonday, 15 Sep. 2025\n\n\nPractical yeast\n\n\nshort demo\n\n\n\n\n\n\n\n\n\nMonday, 22 Sep. 2025\n\n\nPractical collapse\n\n\nglobal option\n\n\n\n\n\n\n\n\n\nNo matching items\n\n\nPractical Quarto templates pre-filled\n\n\n\n\nDate\nTitle\nFile (.qmd)\n\n\n\n\nThursday, 1 Jan. 1970\nPractical chickens\npractical01_answer.qmd\n\n\nMonday, 15 Sep. 2025\nPractical yeast\npractical02_answer.qmd\n\n\nMonday, 22 Sep. 2025\nPractical collapse\npractical03_answer.qmd\n\n\n\nNo matching items"
  },
  {
    "objectID": "practicals/practical02.html",
    "href": "practicals/practical02.html",
    "title": "Practical yeast",
    "section": "",
    "text": "Note\n\n\n\nThis practical has show-solution: true, solution are displayed.\n\n\nThe latin name of baker’s yeast is Saccharomyces cerevisiae.\n\nGive some yeast usage!\n\n\n\n\n\n\nSolution 1 \n\n\n\n\n\n\nwine, beer, cake, pizza\n\n\n\n\nThis solution is unfolded thanks to its option: #| unilur-collapse: false\n\n\nCompute 2 + 4?\n\n\n\n\n\n\nSolution 2 \n\n\n\n\n\n\n2 + 4\n\n[1] 6"
  }
]